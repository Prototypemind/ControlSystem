/*
Vector Operative Logistics and Security - Monitoring Station
Team Members:
Eric Hampton, Carley Horton, Kalonji Woods, Cage Spoden

Source code contributions:
FPS_Enroll.ino, FPS_IDFinger.ino Created by Josh Hawley
FPSGarageDoorOpenner.ino by Nodcah
Sparkfun

*/
#include "FPS_GT511C3.h"
#include "SoftwareSerial.h"
//VARS
//the time we give the sensor to calibrate (10-60 secs according to the datasheet)
int calibrationTime = 10;        

//the time when the sensor outputs a low impulse
long unsigned int lowIn;         

//the amount of milliseconds the sensor has to be low 
//before we assume all motion has stopped
long unsigned int pause = 5000;  

boolean lockLow = true;
boolean takeLowTime;  

FPS_GT511C3 fps(4, 5);
const int button1Pin = 6;
const int ledPin = 13;
SoftwareSerial mySerial(3, 2);
int pirPin = 7;
const int sensorPin = 0;


void setup()
{
Serial.begin(9600);
mySerial.begin(9600);
delay(100);
fps.Open();
fps.SetLED(true);
pinMode(button1Pin, INPUT);
pinMode(ledPin, OUTPUT);
pinMode(pirPin, INPUT);
digitalWrite(pirPin, LOW);   // initialize sensor as an input

//give the sensor some time to calibrate
  Serial.print("calibrating sensor ");
    for(int i = 0; i < calibrationTime; i++){
      Serial.print(".");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  mySerial.write("Calibrating Sensor");   
      delay(1000);
      }
    Serial.println(" done");
    Serial.println("SENSOR ACTIVE");
    delay(50);
Serial.println("Press Finger");
mySerial.write(254); // move cursor to beginning of first line
mySerial.write(128);
mySerial.write("                 "); // clear mySerial
mySerial.write("                 ");
mySerial.write("System Off");
delay(3000);
}
void loop()
{
bool finger = false;
bool button= false;
bool motion =false;
bool ir=false;
// Identify fingerprint test
if (fps.IsPressFinger())
{
//Serial.print("Press Finger");
fps.CaptureFinger(false);
int id = fps.Identify1_N();
if (id <5)
{
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  delay(100);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Access Granted:");
mySerial.write("Access Granted");
delay(1000);
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  delay(100);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  delay(500);
switch(id){
case 0:
Serial.println("Hi Kalonji! ");
mySerial.write("Hi Kalonji!");
delay(1000);
finger=true;
break;
case 1:
Serial.println(" Hey Eric! ");
mySerial.write("Hey Eric!");
delay(1000);
finger=true;
break;
case 2:
Serial.println("Who goes there?");
finger=true;
break;
case 3:
Serial.println("Welcome Carley! ");
mySerial.write("Welcome Carley!");
delay(1000);
finger=true;
break;
case 4:
Serial.println("Hello Cage! ");
mySerial.write("Hello Cage!");
delay(1000);
finger=true;
break;
}
}
else
{
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  delay(100);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  Serial.println("Finger not found");
  mySerial.write("404 Error!");
  mySerial.write("Finger not found");
  delay(5000);
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  delay(100);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  Serial.println("Press Finger");
  mySerial.write("System Off");
}
}
delay(1000);
while(finger==true){
//Push Button Start
int button1State;
button1State = digitalRead(button1Pin);
if (((button1State == LOW)))
{
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  delay(100);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Pressure Sensor!");
mySerial.write("Pressure Sensor!");
digitalWrite(ledPin , HIGH);
delay(5000);
}
else {
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  delay(100);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("All Quiet...");
mySerial.write("All Quiet...");
digitalWrite(ledPin, LOW);
delay(500);
//Push Button End
}

int val =0;
val= analogRead(sensorPin);
if(val>500){
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  delay(100);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  digitalWrite(ledPin, HIGH);
  Serial.println("Case Housing!");
  mySerial.write("Case Housing!");
  delay(5000);
}else{
  mySerial.write("                 "); // clear mySerial
  mySerial.write("                 ");
  delay(100);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  digitalWrite(ledPin, LOW);
  Serial.println("All Quiet...");
  mySerial.write("All Quiet...");
  delay(500);
} 
if(
digitalRead(pirPin == HIGH))
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write(" "); // clear mySerial
  mySerial.write(" ");
  digitalWrite(ledPin, HIGH);
  Serial.println("Motion: Interior!"); 
  mySerial.write("Motion: Interior!");
  delay(2500);
}else{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write(" "); // clear mySerial
  mySerial.write(" ");
  digitalWrite(ledPin, LOW);
  Serial.println("All Quiet...");
  mySerial.write("All Quiet...");
  delay(500);
}
}
}
//end of while
//Special thanks to Professor Schleter, Jared Bell, and Christopher Maseo for 3d Printing & Troubleshooting; to Noah and Professor White for assistance in the Workshop.
