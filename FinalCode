/*
Vector Operative Logistics and Security - Monitoring Station
Team Members:
Eric Hampton, Carley Horton, Kalonji Woods, Cage Spoden
Source code contributions:
FPS_Enroll.ino, FPS_IDFinger.ino Created by Josh Hawley
FPSGarageDoorOpenner.ino by Nodcah
Sparkfun
*/
#include "FPS_GT511C3.h"
#include "SoftwareSerial.h"
FPS_GT511C3 fps(4, 5);
const int button1Pin = 6;
const int ledPin = 13;
SoftwareSerial mySerial(3, 2);
const int pirPin = 7;
const int sensorPin = 0;
void setup()
{
Serial.begin(9600);
mySerial.begin(9600);
delay(100);
fps.Open();
fps.SetLED(true);
pinMode(button1Pin, INPUT);
pinMode(ledPin, OUTPUT);
pinMode(pirPin, INPUT);
//int brightness(157);// 128 = OFF, 157 = Fully ON, everything inbetween = varied brightnbess 
//{
  //this function takes an int between 128-157 and turns the backlight on accordingly
  //mySerial.write(0x7C); //NOTE THE DIFFERENT COMMAND FLAG = 124 dec
  //mySerial.write(157); // any value between 128 and 157 or 0x80 and 0x9D
//} either command may be used to adjust LCD brightness to application needs
digitalWrite(pirPin, LOW); // initialize sensor as an input
Serial.println("Press Finger");
mySerial.write(254); // move cursor to beginning of first line
mySerial.write(128);
mySerial.write(" "); // clear mySerial
mySerial.write(" ");
mySerial.write("System Off");
delay(3000);
}
void loop()
{
bool finger = false;
bool button= false;
bool motion =false;
bool sen1=false;
bool sen2=false;
bool sen3 =false;
bool ir=false;
bool outside=true;
// Identify fingerprint test
if (fps.IsPressFinger())
{
//Serial.print("Press Finger");
fps.CaptureFinger(false);
int id = fps.Identify1_N();
if (id <5)
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Access Granted:");
mySerial.write("Access Granted");
delay(1000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("System On");
mySerial.write("System On");
delay(1000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(500);
switch(id){
case 0:
Serial.println("Hi Kalonji! ");
mySerial.write("Hi Kalonji!");
delay(1000);
finger=true;
break;
case 1:
Serial.println(" Hey Eric! ");
mySerial.write("Hey Eric!");
delay(1000);
finger=true;
break;
case 2:
Serial.println("Who goes there?");
finger=true;
break;
case 3:
Serial.println("Welcome Carley! ");
mySerial.write("Welcome Carley!");
delay(1000);
finger=true;
break;
case 4:
Serial.println("Hello Cage! ");
mySerial.write("Hello Cage!");
delay(1000);
finger=true;
break;
}
}
else
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Finger not found");
mySerial.write("404 Error!");
mySerial.write("Finger not found");
delay(5000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(100);
Serial.println("Press Finger");
mySerial.write("System Off");
}
}
delay(1000);
while(outside==true){
while(finger==true){
//Push Button Start
int button1State;
button1State = digitalRead(button1Pin);
if (((button1State == LOW)))
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Pressure Sensor!");
mySerial.write("Pressure Sensor!");
sen1=true;
digitalWrite(ledPin , HIGH);
delay(5000);
}
else {
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(100);
Serial.println("All Quiet...");
mySerial.write("All Quiet...");
digitalWrite(ledPin, LOW);
delay(500);
//Push Button End
}
int val =0;
val= analogRead(sensorPin);
if(val>500){
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
digitalWrite(ledPin, HIGH);
Serial.println("Case Housing!");
mySerial.write("Case Housing!");
sen2=true;
delay(5000);
}else{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(100);
digitalWrite(ledPin, LOW);
Serial.println("All Quiet...");
mySerial.write("All Quiet...");
delay(500);
}
int pirVal = digitalRead(pirPin);
if(pirVal == LOW)
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
digitalWrite(ledPin, HIGH);
Serial.println("Motion: Interior!");
mySerial.write("Motion: Interior!");
sen3=true;
delay(500);
}else{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
digitalWrite(ledPin, LOW);
Serial.println("All Quiet...");
mySerial.write("All Quiet...");
delay(50);
}
if(sen1 && sen2 && sen3) {
if (fps.IsPressFinger())
{
//Serial.print("Press Finger");
fps.CaptureFinger(false);
int id = fps.Identify1_N();
if (id <5)
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  delay(1000);
Serial.println("System Off");
mySerial.write("System Off");
delay(2500);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(500);
switch(id){
case 0:
Serial.println("Bye Kalonji! ");
mySerial.write("Bye Kalonji!");
delay(1000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Press Finger");
mySerial.write("System Off");
finger=false;
break;
case 1:
Serial.println("Bye Eric! ");
mySerial.write("Bye Eric!");
delay(1000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Press Finger");
mySerial.write("System Off");
finger=false;
break;
case 2:
Serial.println("Who goes there?");
finger=false;
break;
case 3:
Serial.println("Bye Carley! ");
mySerial.write("Bye Carley!");
delay(1000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Press Finger");
mySerial.write("System Off");
finger=false;
break;
case 4:
Serial.println("Bye Cage! ");
mySerial.write("Bye Cage!");
delay(1000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Press Finger");
mySerial.write("System Off");
finger=false;
break;
}
}
else
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(100);
Serial.println("Finger not found");
mySerial.write("404 Error!");
mySerial.write("Finger not found");
delay(5000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(100);
Serial.println("Press Finger");
mySerial.write("System Off");
}
}
}
}//end of while
if (fps.IsPressFinger())
{
//Serial.print("Press Finger");
fps.CaptureFinger(false);
int id = fps.Identify1_N();
if (id <5)
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
Serial.println("Access Granted:");
mySerial.write("Access Granted");
delay(1000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(1000);
Serial.println("System On");
mySerial.write("System On");
delay(1000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(500);
switch(id){
case 0:
Serial.println("Hi Kalonji! ");
mySerial.write("Hi Kalonji!");
delay(1000);
finger=true;
break;
case 1:
Serial.println("Hi Eric! ");
mySerial.write("Hi Eric!");
delay(1000);
finger=true;
break;
case 2:
Serial.println("Who goes there?");
finger=true;
break;
case 3:
Serial.println("Hi Carley! ");
mySerial.write("Hi Carley!");
delay(1000);
finger=true;
break;
case 4:
Serial.println("Hi Cage! ");
mySerial.write("Hi Cage!");
delay(1000);
finger=true;
break;
}
}
else
{
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(100);
Serial.println("Finger not found");
mySerial.write("404 Error!");
mySerial.write("Finger not found");
delay(5000);
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
  mySerial.write("                "); // clear display
  mySerial.write("                ");
  mySerial.write(254); // move cursor to beginning of first line
  mySerial.write(128);
delay(100);
Serial.println("Press Finger");
mySerial.write("System Off");
}
}
}
}
//Special thanks to Professor Schleter, Jared Bell, and Christopher Maseo for 3d Printing & Troubleshooting; to Noah and Professor White for assistance in the Workshop.
